#!/usr/bin/env python
# coding: utf-8

# In[5]:


#functions---parameters are mostly fixed in number

#whatif not  variable args and variable kw args

def p(*args):
    for i in args:
       print(i)
    
p(2,3.14,"EdYoda") 
p(3)
    
def p(**args):
    for i,j in args.items():
       print(j)

p("TCS",id=5,runs=90,name="A")
    


# In[17]:


#Quiz5Q3



s1 = {('a', 'b', 'c')}
print(type(s1))
s1.add(566)
print(s1)
s2=set(('a', 'b', 'c'))
print(s2)
print(type(s2))


# In[19]:


d={[8,9]:6,"ID":4555}
print(d)


# In[22]:


enumm = {0: 1, 1: 2, 2: 3, 4: 4, 5: 5, 6: 6, 7: 7}

#for i , j in enumm.items():
  #  print(i,j)
    

for i, key in enumerate(enumm):
    print(i, key)
    
    
#items---- key and value
#enumerate--- index(generated by interpreter) and key


# In[24]:


def sl(l):
    s=0
    for i in l:
        s=s+i
    return s

l=[8,2,3,0,7]
a=sl(l)

print(a)


# In[25]:


def rs(a):
    #[0:0:-1]
    r=""
    for i in a:
        
        r=i+r
        
    return r

s=input()

q=rs(s)

print(q)
        
    


# In[26]:


def c(s):
    u=0
    l=0
    for i in s:
#        if(ord(i)>=97 and ord(i)<=122)
 #        l=l+1
        if(i.isupper()):
            u=u+1
        else:
            l=l+1
    
    return u,l

up,lo=c("EdYoda")
print(up,lo)


        


# In[27]:


def str1(x):
    a = {"count_upper":0, "count_lower":0}
    for c in x:
        if c.isupper():
            a["count_upper"]+= 1
        elif c.islower():
            a["count_lower"]+= 1
        else:
            pass
    print("The original string:", x)
    print("The number of upper characters:", a["count_upper"])
    print("The number of Lower characters:", a["count_lower"])
str1(str(input("Enter the string:")))


# In[29]:


#Q1
import re

p=(r'[a-zA-Z0-9]')
s=input()
a=re.findall(p,s)
print(a)

[]


# In[30]:


#Qemail id
import re

p=(r'[a-zA-Z0-9]+@[a-zA-Z0-9]+.com')
s=input()
a=re.findall(p,s)
print(a)
#[a-zA-Z0-9]+@[a-zA-Z0-9].[a-zA-Z0-9]{2,3}


# In[33]:


import re

p='^ab*$'
s=input()
a=re.findall(p,s)
print(a)


# In[36]:


import re

p='^ab+$'
s=input()
a=re.findall(p,s)
print(a)


# In[39]:


import re

p='^ab?$'
s=input()
a=re.findall(p,s)
print(a)


# In[47]:


import re

p='ab{3}'
s=input()
a=re.findall(p,s)
print(a)

#when you use ^ or $ it makes it starting or ending
#when not used , it will pick up inbetween substring as well


# In[50]:


import re

p='ab{2,3}'
s=input()
a=re.findall(p,s)
print(a)

#when you use ^ or $ it makes it starting or ending
#when not used , it will pick up inbetween substring as well


# In[52]:


import re

p='[a-z]+_[a-z]+'
s=input()
a=re.findall(p,s)
print(a)


# In[ ]:




