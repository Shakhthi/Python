1.Which of the following declarations is incorrect?


a.  _x = 2
b.  __x = 3
c.  __xyz__ = 5
d.None of these

2.
dictionary = {}
dictionary[1] = 1
dictionary['1'] = 2
dictionary[1] += 1
sum = 0
for k in dictionary:
	sum += dictionary[k]
print (sum)

3.
dictionary = {1:'1', 2:'2', 3:'3'}--3
del dictionary[1]--2
dictionary[1] = '10'--3
del dictionary[2]--2
print (len(dictionary))--2

4.
r = lambda q: q * 2
s = lambda q: q * 3
x = 2
x = r(x)--4
x = s(x)--s(4)--12
x = r(x)--r(12)--24
print (x)--24

5.
nameList = ['Harsh', 'Pratik', 'Bob', 'Dhruv']

print(nameList[1][-1])--string--'k'

6.
nameList = ['Harsh', 'Pratik', 'Bob', 'Dhruv']

pos = nameList.index("TTT")
#index vs find--positive -- same value
#--negative---index==error and find==-1

print(pos * 5)

7.
a = True
b = False
c = False

if a or b and c:
	print ("MICROSOFT")
else:
	print ("microsoft")

8.
gCodes = [1, 2, 3, 4]
gCodes.append([5,6,7,8])==[1,2,3,4,[5,6,7,8]]
print(len(gCodes))
gcodes.extend([5,6,7,8])==[1,2,3,4,5,6,7,8]


9.
def addToList(listcontainer):
	listcontainer += [10]

mylistContainer = [10, 20, 30, 40]
addToList(mylistContainer)
print(len(mylistContainer))

10.
values = [1, 2, 3, 4]
numbers = set(values)
def checknums(num):
	if num in numbers:
		return True
	else:
		return False
for i in filter(checknums, values):
	print (i)
11.
What is the output of the following program? 
L1 = []
L1.append([1, [2, 3], 4])
L1.extend([7, 8, 9])
print(L1[0][1][1] + L1[2])
a) Type Error: can only concatenate list (not “int”) to list 
b) 12 
c) 11 
d) 38 

12.
 What is the output of the code: 
 
print(bool('False'))
print(bool())

False, True
None, None
True, True
True, False

13.
What is the output of the code: 
 


print(['love', 'python'][bool('A')])

love
python
gfg
None

14.

What is the output of the code shown below?
sets = {3, 4, 5}
sets.update([1, 2, 3])
print(sets)
Options:

{1, 2, 3, 4, 5}
{3, 4, 5, 1, 2, 3}
{1, 2, 3, 3, 4, 5}
Error

15.
 What is the output of the code shown below?
set1 = {1, 2, 3}
set2 = set1.copy()
set2.add(4)
print(set1)
Options:

{1, 2, 3, 4}
{1, 2, 3}
Invalid Syntax
Error

16.

What is the output of the code shown below?
set1 = {1, 2, 3}
set2 = {4, 5, 6}
print(len(set1 + set2))
Options:
3
6
Unexpected
Error

17.
What is the output of the following program? 
import string
Line1 = "And Then There Were None"
Line2 = "Famous In Love"
Line3 = "Famous Were The Kol And Klaus"
Line4 = Line1 + Line2 + Line3
print("And" in Line4)
a) True 2 
b) True 
c) False 
d) False 2 

18.
What will be the output of the following program ?
tuple = (1, 2, 3, 4)
tuple.append( (5, 6, 7) )
print(len(my_tuple))
Options:
1
2
5
Error

19.
What will be the output of the following program ?
tuples = {}
tuples[(1,2,4)] = 8
tuples[(4,2,1)] = 10
tuples[(1,2)] = 12
_sum = 0
for k in tuples:
    _sum += tuples[k]
print(len(tuples) + _sum)
34
12
31
33

20.
What will be the output of the following program ?

tuple = (1, 2, 3)
print(2 * tuple)
Options:

(1, 2, 3, 1, 2, 3)
(1, 2, 3, 4, 5, 6)
(3, 6, 9)
Error

21.
What will be the output of the following program ?

tuple=("Check")*3
print(tuple)
Options:

Unexpected
(3Check)
CheckCheckCheck
Syntax Error

22.

list1 = [1, 2, 3, 4, 5]
list2 = list1

list2[0] = 0

print(list1) #statement 2


23.
What is the output of the code: 
 

mylist =[0, 5, 2, 0, 'gfg', '', []]
print(list(filter(bool, mylist)))

[0, 0, ]
[0, 5, 2, 0, ‘gfg’, ”, []]
Error
[5, 2, ‘gfg’]

24.
a = True
b = False
c = False
  
if not a or b:
    print (1)
elif not a or not b and c:
    print (2)
elif not a or b or not b and a:
    print (3)
else:
    print (4)

25.

count = 1
def doThis():

	global count
	for i in (1, 2, 3):
		count += 1
doThis()
print (count)


26.

t = (1, 2)
print(2 * t)


27.
What is the output of the following program? 


L = list('123456')
L[0] = L[5] = 0
L[3] = L[-2]
print(L)
a) [0, ‘2’, ‘3’, ‘4’, ‘5’, 0] 
b) [‘6’, ‘2’, ‘3’, ‘5’, ‘5’, ‘6’] 
c) [‘0’, ‘2’, ‘3’, ‘5’, ‘5’, ‘0’] 
d) [0, ‘2’, ‘3’, ‘5’, ‘5’, 0] 

28.
list = [1, 2, 3, None, (1, 2, 3, 4, 5), 
['Geeks', 'for', 'Geeks']]
print(len(list))


29.
d1 = [10, 20, 30, 40, 50]
d2 = [1, 2, 3, 4, 5]
print(d1 - d1)

30.

list = ['a', 'b', 'c']*-3
print(list)


31.
list = ['a', 'b', 'c', 'd', 'e']
print(list[10:])


32.

What is the output of the following?
my_string = "TCS"
i = "i"
while i in my_string:
    print(i, end =" ")

No Output
TCS
i i i i i i …
T C S

33.

What is the output of the following?

i = 0
while i < 3:
    print(i)
    i += 1
else:
    print(0)
0 1 2 3 0
0 1 2 0
0 1 2
Error

34.

What is the output of the following?

my_string = 'UUUUU'
for i in range(my_string):
    print(i)


0 1 2 3 … 12
UUUUU
None
Error

35.
 What is the output of the following program? 
 
line =  "What will have so will"
L = line.split('a')
for i in L:
    print(i, end=' ')--B
print(L)--D
a) [‘What’, ‘will’, ‘have’, ‘so’, ‘will’] 
b) Wh t will h ve so will 
c) What will have so will 
d) [‘Wh’, ‘t will h’, ‘ve so will’] 

36.

What is the value of L at the end of execution of the following program? 


L = [2e-04, 'a', False, 87]
T = (6.22, 'boy', True, 554)
for i in range(len(L)):
    if L[i]:
        L[i] = L[i] + T[i]
    else:
        T[i] = L[i] + T[i]
        break
a) [6.222e-04, ‘aboy’, True, 641] 
b) [6.2202, ‘aboy’, 1, 641] 
c) TypeError 
d) [6.2202, ‘aboy’, False, 87] 

37.

Which of the options below could possibly be the output of the following program? 
L = [3, 1, 2, 4]
T = ('A', 'b', 'c', 'd')
L.sort()
counter = 0
for x in T:
    L[counter] += int(x)
    counter += 1
    break
print(L)
a) [66, 97, 99, 101] 
b) [66, 68, 70, 72] 
c) [66, 67, 68, 69] 
d) ValueError 

38.
 What is the output of the following program? 
 
L = [1, 3, 5, 7, 9]
print(L.pop(-3), end = '  ')
print(L.remove(L[0]), end = '  ')
print(L)

a) 5 None [3, 7, 9] 
b) 5 1 [3, 7, 9]  
c) 5 None [1, 3, 7, 9] 

39.

my_string = 'TCS'
for i in range(len(my_string)):
	print (my_string)
	my_string = 'a'


1.d
2.4
3.2
4.24
5.k
6.Error
7.MICROSOFT
8.5
9.5
10.
1
2
3
4

11.11
12.D
13.B
14.A
15.B
16.Error
17.True
18.Error
19.33
20.A
21.C
22.[0,2,3,4,5]
23.D
24.3
25.4
26.(1,2,1,2)
27.D
28.6
29.Error
30.[]
31.[]
32.No Output
33.B
34.D
35.B
36.C
37.D
38.A
39.TCS
a
a



